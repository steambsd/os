#!/bin/sh

############################################
### Function                             ###
############################################
TYPI="I"
if [ -d /etc/ins/All ]; then TYPI="L"; fi
# package type installation (local or inet)
pli()
{
if [ -d All ]; then
zvar=`ls All | grep $1 | awk '{ print length, $0 }' | sort -n | cut -d" " -f2- | head -1`
sudo pkg add -f All/$zvar
else
sudo pkg ins -f -y $1
fi
}

############################################
### Start                                ###
############################################
sleep 2
cd ~
#welcome
#python3.7 .yet.py & > /dev/null 2>&1
#dsbmc-cli -a &
#dsbmc &
clear
echo "Start customization for user $USER"

############################################
### Filesystem                           ###
############################################
#sudo su root -c "rm -Rf /tmp/*"
#sudo su root -c "/etc/rc.d/cleartmp start"
# fstab and mount
sudo su root -c "echo 'linprocfs       /compat/linux/proc      linprocfs rw           0 0' >> /etc/fstab"
sudo su root -c "echo 'linsysfs        /compat/linux/sys       linsysfs  rw           0 0' >> /etc/fstab"
sudo su root -c "echo 'tmpfs           /compat/linux/dev/shm   tmpfs     rw,mode=1777 0 0' >> /etc/fstab"
sudo su root -c "echo 'fdesc           /dev/fd                 fdescfs   rw           0 0' >> /etc/fstab"
sudo su root -c "echo 'procfs          /proc                   procfs    rw           0 0' >> /etc/fstab"
sudo mount -a

sleep 6
sudo su root -c "killall -HUP dsbmc"
############################################
### Desktop customization                ###
############################################
#lxde-preset
pcmanfm --set-wallpaper /usr/local/share/wallpapers/wall.jpg >> /dev/null 2>&1

#lxqt-preset
pcmanfm-qt --set-wallpaper /usr/local/share/wallpapers/wall.jpg >> /dev/null 2>&1

#lumina-preset
sleep 2
sudo su root -c "cp /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf.save" >> /dev/null 2>&1
sudo su root -c "cp /home/$USER/.config/lumina-desktop/desktopsettings.conf /home/$USER/.config/lumina-desktop/desktopsettings.conf.save" >> /dev/null 2>&1
sleep 2
sudo su root -c "sed -i '' 's/hidepanel=false/hidepanel=true/g' /home/$USER/.config/lumina-desktop/desktopsettings.conf" >> /dev/null 2>&1
sudo su root -c "printf '%s\n' /General/a 'DisableQuotes=true' . w q | ex -s /home/$USER/.config/lumina-desktop/sessionsettings.conf" >> /dev/null 2>&1
sudo su root -c "printf '%s\n' /desktop-/a 'background\filelist=/usr/local/share/wallpapers/wall.jpg' . w q | ex -s /home/$USER/.config/lumina-desktop/desktopsettings.conf" >> /dev/null 2>&1
sleep 8
#sudo su root -c "printf '%s\n' /desktop-DP-0/a 'background\filelist=/usr/local/share/wallpapers/wall.jpg' . w q | ex -s /home/$USER/.config/lumina-desktop/desktopsettings.conf" >> /dev/null 2>&1
#sudo su root -c "printf '%s\n' /desktop-DP-1/a 'background\filelist=/usr/local/share/wallpapers/wall.jpg' . w q | ex -s /home/$USER/.config/lumina-desktop/desktopsettings.conf" >> /dev/null 2>&1
#sudo su root -c "printf '%s\n' /desktop-default/a 'background\filelist=/usr/local/share/wallpapers/wall.jpg' . w q | ex -s /home/$USER/.config/lumina-desktop/desktopsettings.conf" >> /dev/null 2>&1
#sudo su root -c "printf '%s\n' /desktop-VGA/a 'background\filelist=/usr/local/share/wallpapers/wall.jpg' . w q | ex -s /home/$USER/.config/lumina-desktop/desktopsettings.conf" >> /dev/null 2>&1
#sleep 1
#sudo su root -c "sed -i '' '/currentfeeds=/d' /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
#sudo su root -c "sed -i '' '/feedReads/d' /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
#sleep 1
#sudo su root -c "sed -i '' '/currentfeeds=/d' /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
#sudo su root -c "sed -i '' '/feedReads/d' /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
#sudo su root -c "sed -i '' '/feedReads/d' /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
#sudo su root -c "sed -i '' '/feedReads/d' /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
#sleep 1
#sudo su root -c "sed -i '' '/rssreader---/d' /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
#sleep 1
#sudo su root -c "printf '%s\n' /rssreader/a 'currentfeeds=https://lpros.blogspot.com/feeds/posts/default' . w q | ex -s /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
#sudo su root -c "printf '%s\n' /rssreader/a 'default_interval_minutes=1' . w q | ex -s /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1 
#sleep 1
sudo su root -c "echo '[panelPlugs]' > /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
sudo su root -c "echo 'systemstart---0.0.1\MenuSize=@Size(270 568)' >> /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
sudo su root -c "echo ' ' >> /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
sudo su root -c "echo '[rssreader]' >> /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
sudo su root -c "echo 'currentfeeds=https://lpros.blogspot.com/feeds/posts/default' >> /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1
sudo su root -c "echo 'default_interval_minutes=1' >> /home/$USER/.config/lumina-desktop/pluginsettings/desktopsettings.conf" >> /dev/null 2>&1 

#plasma-preset
sed -i '' '/Image=file/d' /home/$USER/.config/plasma-org.kde.plasma.desktop-appletsrc >> /dev/null 2>&1
printf '%s\n' /Wallpaper/a 'Image=file:///usr/local/share/wallpapers/wall.jpg' . w q | ex -s .config/plasma-org.kde.plasma.desktop-appletsrc >> /dev/null 2>&1
( kquitapp5 plasmashell || killall plasmashell && kstart5 plasmashell ) >> /dev/null 2>&1

# relay
printf "\033[1;33m===> information:\033[0;m\n"
printf "\033[1;34mPlease, wait... (5 minutes)\033[0;m\n"
#sleep 150
if [ $TYPI == "L" ]; then sleep 40; else sleep 200; fi
rm 'Desktop/7-Zip File Manager.desktop' >> /dev/null 2>&1
rm 'Desktop/7-Zip Help.desktop' >> /dev/null 2>&1
#rm Desktop/Steam.desktop >> /dev/null 2>&1

#shortcut
cat << EOF > Desktop/Acolyte.desktop 
[Desktop Entry]
Name=Acolyte
Exec=/home/$USER/.local/bin/steam-acolyte
Type=Application
StartupNotify=true
Icon=/usr/home/$USER/.local/lib/python3.7/site-packages/steam_acolyte/acolyte.svg
EOF
cat << EOF > Desktop/Boost.desktop 
[Desktop Entry]
Name=Boost
Exec=xterm -geometry 40x4+0-0 -e ~/.boost
Type=Application
StartupNotify=true
Icon=/usr/local/share/pixmaps/ystartboosting.png
EOF
cat << EOF > Desktop/Recorder.desktop
[Desktop Entry]
Name=Recorder
Exec=simplescreenrecorder --logfile
StartupNotify=true
Type=Application
Name=Recorder
Icon=simplescreenrecorder
EOF
cat << EOF > Desktop/Terminal.desktop 
[Desktop Entry]
Name=Terminal
Exec=lxterminal --geometry=80x22 -e ./.info &
Type=Application
StartupNotify=true
Icon=/usr/local/share/pixmaps/mini.xterm_48x48.xpm
EOF
cat << EOF > Desktop/Utils.desktop 
[Desktop Entry]
Name=Utils
Exec=xterm -geometry 73x48-0-25 -e ./.utils &
Type=Application
StartupNotify=true
Icon=/usr/local/share/pixmaps/ysettings.png
EOF
cat << EOF > Desktop/Yet.desktop
[Desktop Entry]
Name=Yet
Exec=python3.7 .yet.py 
StartupNotify=true
Type=Application
Icon=/usr/local/share/pixmaps/ysettingsnew.png
EOF
cat << EOF > Desktop/Chrome.desktop
[Desktop Entry]
Name=Chrome
Exec=chrome --show-fps-counter --force-dark-mode --window-size=640,760 --window-position=640,0 https://stadia.google.com/
StartupNotify=true
Type=Application
Icon=/usr/local/share/pixmaps/yrchrome.png
EOF
cat << EOF > Desktop/Media.desktop
[Desktop Entry]
Name=Media
Exec=sh .dsbmc
StartupNotify=true
Type=Application
Icon=/usr/local/share/pixmaps/ymedia.png
EOF

#sleep 50
if [ $TYPI == "L" ]; then sleep 10; else sleep 50; fi
############################################
### Readme.txt                           ###
############################################
cat << EOF > ~/Desktop/Readme

If internet not work / Если интернет не работает:
1. Open Terminal
2. Run command:
sudo bsdconfig networking

--- SteamBSD © is FREE operating system.
Site (ISO/IMG): https://lpros.blogspot.com
Github (inet): https://github.com/steambsd/os
Email: steambsd@gmail.com

--- Help to SteamBSD project
Mastercard: 5336 6903 9850 8962
Yoomoney (Yandex.Money): 4100 1297 1657 794
DA: https://www.donationalerts.com/r/steambsd
EOF

############################################
### Plugins for Steam                    ###
############################################
#pip install steam-acolyte
#export PATH=$PATH:.local/bin/
#xterm -geometry 40x4-500+0 -e steam-acolyte &

############################################
### Final                                ###
############################################
mv ~/reconfig ~/.reconfig
sudo su root -c "rm /usr/local/etc/xdg/autostart/wine.desktop"

mv ~/.steam-wine ~/.steam-wine.save
mv ~/.steam-winepro ~/.steam-winepro.save
mv ~/.steam-compat ~/.steam-compat.save
mv ~/.steam-acolyte ~/.steam-acolyte.save
#su root -c "ln -s /home/$USER/.local/bin/steam-acolyte /usr/local/bin/steam-acolyte"
sudo su root -c "echo '[Desktop Entry]' > /usr/local/etc/xdg/autostart/steam-acolyte-link.desktop"
sudo su root -c "echo 'Name=steam-acolyte' >> /usr/local/etc/xdg/autostart/steam-acolyte-link.desktop"
sudo su root -c "echo 'Type=Application' >> /usr/local/etc/xdg/autostart/steam-acolyte-link.desktop"
sudo su root -c "echo 'Exec=steam-acolyte' >> /usr/local/etc/xdg/autostart/steam-acolyte-link.desktop"
sudo su root -c "echo 'Terminal=false' >> /usr/local/etc/xdg/autostart/steam-acolyte-link.desktop"

# reinstall some packages
cd /etc/ins/
#sudo su root -c "pkg ins -f -y gsettings-desktop-schemas"
pli gsettings-desktop-schemas
# clear
#sudo su root -c "rm -rf /etc/ins/*"

echo '################################################'
echo '###      System installed successfully!      ###'
echo '################################################'
echo ''
echo 'Please wait if Steam updates.'
echo 'It is recommended to install PROTON right now.'
echo 'Just open Utils on desktop and do p1,p2,p3...'
echo '-------------------------------------'
printf "\033[1;31mSystem installed successfully!\033[0;m\n"
printf "\033[1;34mYou may close all terminals.\033[0;m\n"
printf "\033[1;34mYou may reboot later.\033[0;m\n"
echo '-------------------------------------'
echo -n 'Do you want to reboot PC now? (yes, no): '
read ans
case "$ans" in
[Yy]|[Yy][Ee][Ss])
 echo "OK. Good bye."
 sudo reboot
 ;;
[Nn]|[Nn][Oo])
 echo "OK. Go on."
 ;;
*)
 echo "Error. Please, type yes or no."
 ;;
esac
